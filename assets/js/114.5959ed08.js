(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{528:function(a,t,r){"use strict";r.r(t);var s=r(3),_=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("ArticleTopAd"),a._v(" "),t("h2",{attrs:{id:"_1-前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言"}},[a._v("#")]),a._v(" 1. 前言")]),a._v(" "),t("p",[a._v("计划:\n和软件设计师知识点很大不同，需要准备下")]),a._v(" "),t("h1",{attrs:{id:"选择"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择"}},[a._v("#")]),a._v(" 选择")]),a._v(" "),t("p",[a._v("DSP是专门用于实时的数字信号处理的处理器\n采用哈佛架构")]),a._v(" "),t("h1",{attrs:{id:"下午题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下午题"}},[a._v("#")]),a._v(" 下午题")]),a._v(" "),t("h2",{attrs:{id:"反规范化设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反规范化设计"}},[a._v("#")]),a._v(" 反规范化设计")]),a._v(" "),t("h3",{attrs:{id:"增加冗余列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增加冗余列"}},[a._v("#")]),a._v(" 增加冗余列")]),a._v(" "),t("p",[a._v("在多个表中增加相同的常用列，可用来在查询时避免连接操作。")]),a._v(" "),t("h3",{attrs:{id:"增加派生列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增加派生列"}},[a._v("#")]),a._v(" 增加派生列")]),a._v(" "),t("p",[a._v("把可由通过表中其他数据计算生成的列作为固定的列插入到表中，它的作用是在查询时减少计算量，从而加快查询速度。")]),a._v(" "),t("h3",{attrs:{id:"重新组表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重新组表"}},[a._v("#")]),a._v(" 重新组表")]),a._v(" "),t("p",[a._v("如果许多用户需要查看两个表连接出来的结果数据，则把这两个表重新组成一个表来减少连接从而提高性能。")]),a._v(" "),t("h3",{attrs:{id:"分割表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分割表"}},[a._v("#")]),a._v(" 分割表")]),a._v(" "),t("p",[a._v("有水平分割、垂直分割两种，水平分割把表按记录进行分割，把数据放到多个独立的表中，主要用于表数据规模很大、表中数据相对独立或数据需要存放到多个介质上时使用；\n垂直分割表对表按照列进行分割，通常将主键与部分列放到一个表中，主键和其他列放到另一个表中，在查询时减少I/O次数。")]),a._v(" "),t("h2",{attrs:{id:"数据不一致"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据不一致"}},[a._v("#")]),a._v(" 数据不一致")]),a._v(" "),t("h3",{attrs:{id:"批处理维护"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#批处理维护"}},[a._v("#")]),a._v(" 批处理维护")]),a._v(" "),t("p",[a._v("通过定期运行批处理作业后者存储过程对数据进行修改，适用于实时性哟啊求不高的情况。")]),a._v(" "),t("h3",{attrs:{id:"应用逻辑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用逻辑"}},[a._v("#")]),a._v(" 应用逻辑")]),a._v(" "),t("p",[a._v("在同一事务中对所有涉及的表进行增、删、改操作，同一逻辑必须在所有的应用中使用和维护，缺点是容易遗漏，特别是在需求变化时，不易于维护。")]),a._v(" "),t("h3",{attrs:{id:"触发器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#触发器"}},[a._v("#")]),a._v(" 触发器")]),a._v(" "),t("p",[a._v("对数据的任何修改立即触发对数据库的某些列的相应修改，实时性号，也易于维护。")]),a._v(" "),t("h2",{attrs:{id:"redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[a._v("#")]),a._v(" Redis")]),a._v(" "),t("h3",{attrs:{id:"数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),t("p",[a._v("String是基本类型，可用于缓存层或计数器，如视频播放量、文章浏览量等。\nHash类型是一种特殊的String类型，更节省空间，描述用户信息较为方便。\nSet是无序集合类型，每个值不能重复，可用于去重、抽奖、初始化用户池等。\nList是双向链表结构，可以模拟栈、队列等形式，可用于回复评论、点赞。\nZSet是有序集合类型，每个元素有一个分数，可用于首页推荐10个最热门的帖子等功能。")]),a._v(" "),t("h3",{attrs:{id:"数据同步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据同步"}},[a._v("#")]),a._v(" 数据同步")]),a._v(" "),t("ol",[t("li",[a._v("引用MySQL事务，因为事务有一致性保证，事务提交成功后再更新缓存；")]),a._v(" "),t("li",[a._v("在缓存里面引用一些访问控制位，数据库数据变化后，同步变更对应的访问控制位，然后从缓存查询时，率先判断该访问控制位，有变化就从数据库查，无变化直接从缓存返回数据")]),a._v(" "),t("li",[a._v("通过数据库中间件产品保证缓存和数据库数据的实时同步。")])]),a._v(" "),t("h3",{attrs:{id:"rdb和aof"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rdb和aof"}},[a._v("#")]),a._v(" RDB和AOF")]),a._v(" "),t("ol",[t("li",[a._v("RDB更新频率低")]),a._v(" "),t("li",[a._v("AOF可以保证数据不丢失，更安全")]),a._v(" "),t("li",[a._v("RDB间隔一段时间存储，可能发生数据丢失和不一致。")]),a._v(" "),t("li",[a._v("RDB文件小")])]),a._v(" "),t("h2",{attrs:{id:"反规范化设计-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反规范化设计-2"}},[a._v("#")]),a._v(" 反规范化设计")]),a._v(" "),t("h3",{attrs:{id:"增加冗余列-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增加冗余列-2"}},[a._v("#")]),a._v(" 增加冗余列")]),a._v(" "),t("p",[a._v("在多个表中增加相同的常用列，可用来在查询时避免连接操作。")]),a._v(" "),t("h3",{attrs:{id:"增加派生列-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增加派生列-2"}},[a._v("#")]),a._v(" 增加派生列")]),a._v(" "),t("p",[a._v("把可由通过表中其他数据计算生成的列作为固定的列插入到表中，它的作用是在查询时减少计算量，从而加快查询速度。")]),a._v(" "),t("h3",{attrs:{id:"重新组表-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重新组表-2"}},[a._v("#")]),a._v(" 重新组表")]),a._v(" "),t("p",[a._v("如果许多用户需要查看两个表连接出来的结果数据，则把这两个表重新组成一个表来减少连接从而提高性能。")]),a._v(" "),t("h3",{attrs:{id:"分割表-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分割表-2"}},[a._v("#")]),a._v(" 分割表")]),a._v(" "),t("p",[a._v("有水平分割、垂直分割两种，水平分割把表按记录进行分割，把数据放到多个独立的表中，主要用于表数据规模很大、表中数据相对独立或数据需要存放到多个介质上时使用；\n垂直分割表对表按照列进行分割，通常将主键与部分列放到一个表中，主键和其他列放到另一个表中，在查询时减少I/O次数。")]),a._v(" "),t("h2",{attrs:{id:"数据不一致-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据不一致-2"}},[a._v("#")]),a._v(" 数据不一致")]),a._v(" "),t("h3",{attrs:{id:"批处理维护-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#批处理维护-2"}},[a._v("#")]),a._v(" 批处理维护")]),a._v(" "),t("p",[a._v("通过定期运行批处理作业后者存储过程对数据进行修改，适用于实时性哟啊求不高的情况。")]),a._v(" "),t("h3",{attrs:{id:"应用逻辑-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用逻辑-2"}},[a._v("#")]),a._v(" 应用逻辑")]),a._v(" "),t("p",[a._v("在同一事务中对所有涉及的表进行增、删、改操作，同一逻辑必须在所有的应用中使用和维护，缺点是容易遗漏，特别是在需求变化时，不易于维护。")]),a._v(" "),t("h3",{attrs:{id:"触发器-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#触发器-2"}},[a._v("#")]),a._v(" 触发器")]),a._v(" "),t("p",[a._v("对数据的任何修改立即触发对数据库的某些列的相应修改，实时性号，也易于维护。")]),a._v(" "),t("h2",{attrs:{id:"redis-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-2"}},[a._v("#")]),a._v(" Redis")]),a._v(" "),t("h3",{attrs:{id:"数据类型-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型-2"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),t("p",[a._v("String是基本类型，可用于缓存层或计数器，如视频播放量、文章浏览量等。\nHash类型是一种特殊的String类型，更节省空间，描述用户信息较为方便。\nSet是无序集合类型，每个值不能重复，可用于去重、抽奖、初始化用户池等。\nList是双向链表结构，可以模拟栈、队列等形式，可用于回复评论、点赞。\nZSet是有序集合类型，每个元素有一个分数，可用于首页推荐10个最热门的帖子等功能。")]),a._v(" "),t("h3",{attrs:{id:"数据同步-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据同步-2"}},[a._v("#")]),a._v(" 数据同步")]),a._v(" "),t("ol",[t("li",[a._v("引用MySQL事务，因为事务有一致性保证，事务提交成功后再更新缓存；")]),a._v(" "),t("li",[a._v("在缓存里面引用一些访问控制位，数据库数据变化后，同步变更对应的访问控制位，然后从缓存查询时，率先判断该访问控制位，有变化就从数据库查，无变化直接从缓存返回数据")]),a._v(" "),t("li",[a._v("通过数据库中间件产品保证缓存和数据库数据的实时同步。")])]),a._v(" "),t("h3",{attrs:{id:"rdb和aof-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rdb和aof-2"}},[a._v("#")]),a._v(" RDB和AOF")]),a._v(" "),t("ol",[t("li",[a._v("RDB更新频率低")]),a._v(" "),t("li",[a._v("AOF可以保证数据不丢失，更安全")]),a._v(" "),t("li",[a._v("RDB间隔一段时间存储，可能发生数据丢失和不一致。")]),a._v(" "),t("li",[a._v("RDB文件小")])]),a._v(" "),t("h2",{attrs:{id:"质量属性效用树-utility-tree"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#质量属性效用树-utility-tree"}},[a._v("#")]),a._v(" 质量属性效用树(Utility Tree)")]),a._v(" "),t("p",[a._v("性能\n安全性\n可用性\n可修改性")]),a._v(" "),t("h3",{attrs:{id:"可用性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可用性"}},[a._v("#")]),a._v(" 可用性")]),a._v(" "),t("p",[a._v("心跳、ping/Echo、冗余、进程监视器")]),a._v(" "),t("h3",{attrs:{id:"可修改性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可修改性"}},[a._v("#")]),a._v(" 可修改性")]),a._v(" "),t("p",[a._v("抽象、信息隐藏、限制通信路径、")]),a._v(" "),t("h2",{attrs:{id:"主从复制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主从复制"}},[a._v("#")]),a._v(" 主从复制")]),a._v(" "),t("h3",{attrs:{id:"过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[a._v("#")]),a._v(" 过程")]),a._v(" "),t("p",[a._v("当在从库上启用复制时，首先创建I/O线程连接主库，主库随后创建Binlog Dump线程读取数据库事件并发送给I/O线程，I/O线程获取到事件数据后更新到从库的中继日志Retry Log中去，之后从库上的SQL线程读取中继日志Retry Log中更新的数据库事件并应用。")]),a._v(" "),t("p",[a._v("我的博客即将同步至腾讯云开发者社区，邀请大家一同入驻：https://cloud.tencent.com/developer/support-plan?invite_code=38dpnhkh4o8wo")])],1)}),[],!1,null,null,null);t.default=_.exports}}]);