(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{535:function(t,e,r){"use strict";r.r(e);var a=r(3),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("ArticleTopAd"),t._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("h2",{attrs:{id:"配置优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置优先级"}},[t._v("#")]),t._v(" 配置优先级")]),t._v(" "),e("p",[t._v("Default properties (specified by setting SpringApplication.setDefaultProperties).")]),t._v(" "),e("p",[t._v("@PropertySource annotations on your @Configuration classes. Please note that such property sources are not added to the Environment until the application context is being refreshed. This is too late to configure certain properties such as logging.* and spring.main.* which are read before refresh begins.")]),t._v(" "),e("p",[t._v("Config data (such as application.properties files).")]),t._v(" "),e("p",[t._v("A RandomValuePropertySource that has properties only in random.*.")]),t._v(" "),e("p",[t._v("OS environment variables.")]),t._v(" "),e("p",[t._v("Java System properties (System.getProperties()).")]),t._v(" "),e("p",[t._v("JNDI attributes from java:comp/env.")]),t._v(" "),e("p",[t._v("ServletContext init parameters.")]),t._v(" "),e("p",[t._v("ServletConfig init parameters.")]),t._v(" "),e("p",[t._v("Properties from SPRING_APPLICATION_JSON (inline JSON embedded in an environment variable or system property).")]),t._v(" "),e("p",[t._v("Command line arguments.")]),t._v(" "),e("p",[t._v("properties attribute on your tests. Available on @SpringBootTest and the test annotations for testing a particular slice of your application.")]),t._v(" "),e("p",[t._v("@DynamicPropertySource annotations in your tests.")]),t._v(" "),e("p",[t._v("@TestPropertySource annotations on your tests.")]),t._v(" "),e("p",[t._v("Devtools global settings properties in the $HOME/.config/spring-boot directory when devtools is active.")]),t._v(" "),e("p",[t._v("Config data files are considered in the following order:")]),t._v(" "),e("p",[t._v("Application properties packaged inside your jar (application.properties and YAML variants).")]),t._v(" "),e("p",[t._v("Profile-specific application properties packaged inside your jar (application-{profile}.properties and YAML variants).")]),t._v(" "),e("p",[t._v("Application properties outside of your packaged jar (application.properties and YAML variants).")]),t._v(" "),e("p",[t._v("Profile-specific application properties outside of your packaged jar (application-{profile}.properties and YAML variants).\nhttps://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config")]),t._v(" "),e("h2",{attrs:{id:"多环境配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多环境配置"}},[t._v("#")]),t._v(" 多环境配置")]),t._v(" "),e("h2",{attrs:{id:"安全整改方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安全整改方法"}},[t._v("#")]),t._v(" 安全整改方法")]),t._v(" "),e("p",[t._v("项目配置文件容易泄露密码，存在安全风险")]),t._v(" "),e("h3",{attrs:{id:"改到配置中心"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#改到配置中心"}},[t._v("#")]),t._v(" 改到配置中心")]),t._v(" "),e("p",[t._v("看项目使用，可以移动到nacos里面")]),t._v(" "),e("h3",{attrs:{id:"对配置项进行加密"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对配置项进行加密"}},[t._v("#")]),t._v(" 对配置项进行加密")]),t._v(" "),e("p",[t._v("使用 jasypt 对配置项进行加密\nhttps://juejin.cn/post/6850418120726446093")]),t._v(" "),e("h3",{attrs:{id:"修改配置到k8s字典里面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改配置到k8s字典里面"}},[t._v("#")]),t._v(" 修改配置到k8s字典里面")]),t._v(" "),e("h3",{attrs:{id:"改到环境变量里面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#改到环境变量里面"}},[t._v("#")]),t._v(" 改到环境变量里面")]),t._v(" "),e("p",[t._v("这个优先级比较高")]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("p",[t._v("https://juejin.cn/post/6850418120726446093")])],1)}),[],!1,null,null,null);e.default=s.exports}}]);